<?xml version="1.0"?>
<doc>
    <assembly>
        <name>handshake</name>
    </assembly>
    <members>
        <member name="T:handshake.Classes.MatchParentAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:handshake.Controllers.PostController">
            <summary>
            The post controller provides functionality to manage posts.
            </summary>
        </member>
        <member name="M:handshake.Controllers.PostController.#ctor(handshake.Interfaces.IAuthService)">
            <summary>
            Creates a new instance of the PostController class.
            </summary>
            <param name="userService">The user / login service.</param>
        </member>
        <member name="M:handshake.Controllers.PostController.GetClosePosts(System.Decimal,System.Decimal)">
            <summary>
            Gets all posts nearby.
            </summary>
            <returns>The Posts nearby.</returns>
        </member>
        <member name="M:handshake.Controllers.PostController.Post(handshake.PostData.PostPostData)">
            <summary>
            Posts a new post.
            </summary>
            <param name="daten">The post to post.</param>
            <returns>The posted post.</returns>
        </member>
        <member name="T:handshake.Controllers.UserController">
            <summary>
            The user controller provides functionality to manage posts.
            </summary>
        </member>
        <member name="M:handshake.Controllers.UserController.#ctor(handshake.Interfaces.IAuthService)">
            <summary>
            Creates a new instance of the UserController class.
            </summary>
            <param name="userService">The user / login service.</param>
        </member>
        <member name="M:handshake.Controllers.UserController.GetCloseUsers(System.Decimal,System.Decimal)">
            <summary>
            Gets all users nearby.
            </summary>
            <returns>Close users.</returns>
        </member>
        <member name="M:handshake.Controllers.UserController.Post(handshake.PostData.UserPostData)">
            <summary>
            Creates a new user.
            </summary>
            <param name="daten">The user to create.</param>
            <returns>The created user.</returns>
        </member>
        <member name="T:handshake.Data.AuthenticateModel">
            <summary>
            The authentication model contains all data needed to sign in.
            </summary>
        </member>
        <member name="P:handshake.Data.AuthenticateModel.Username">
            <summary>
            The login username.
            </summary>
        </member>
        <member name="P:handshake.Data.AuthenticateModel.Password">
            <summary>
            The login password.
            </summary>
        </member>
        <member name="T:handshake.Entities.PostEntity">
            <summary>
            A post.
            </summary>
        </member>
        <member name="P:handshake.Entities.PostEntity.Id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="P:handshake.Entities.PostEntity.Author">
            <summary>
            The author.
            </summary>
        </member>
        <member name="P:handshake.Entities.PostEntity.Content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="P:handshake.Entities.PostEntity.Creationdate">
            <summary>
            The creation date.
            </summary>
        </member>
        <member name="P:handshake.Entities.PostEntity.Longitude">
            <summary>
            The location longitude.
            </summary>
        </member>
        <member name="P:handshake.Entities.PostEntity.Latitude">
            <summary>
            The location lattitude.
            </summary>
        </member>
        <member name="T:handshake.Entities.UserEntity">
            <summary>
            A user.
            </summary>
        </member>
        <member name="P:handshake.Entities.UserEntity.Id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="P:handshake.Entities.UserEntity.Nickname">
            <summary>
            The users nickname.
            </summary>
        </member>
        <member name="P:handshake.Entities.UserEntity.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="T:handshake.GetData.PostGetData">
            <summary>
            A post.
            </summary>
        </member>
        <member name="P:handshake.GetData.PostGetData.Id">
            <summary>
            The id.
            </summary>
        </member>
        <member name="P:handshake.GetData.PostGetData.Author">
            <summary>
            The author.
            </summary>
        </member>
        <member name="P:handshake.GetData.PostGetData.AuthorName">
            <summary>
            The author name.
            </summary>
        </member>
        <member name="P:handshake.GetData.PostGetData.Content">
            <summary>
            The content.
            </summary>
        </member>
        <member name="P:handshake.GetData.PostGetData.Creationdate">
            <summary>
            The creation date.
            </summary>
        </member>
        <member name="T:handshake.Interfaces.IAuthService">
            <summary>
            The <see cref="T:handshake.Interfaces.IAuthService"/> interface represents the authentication service.
            </summary>
        </member>
        <member name="M:handshake.Interfaces.IAuthService.Authenticate(System.String,System.String)">
            <summary>
            Performs the Authentication and retrives a connection.
            </summary>
            <param name="username">The SQL username.</param>
            <param name="password">The SQL password.</param>
            <returns>An open connection.</returns>
        </member>
        <member name="M:handshake.Interfaces.IAuthService.GetConnection">
            <summary>
            Retrives the current connection.
            </summary>
            <returns>the current connection.</returns>
        </member>
        <member name="T:handshake.PostData.PostPostData">
            <summary>
            The insert post data is class for inserting new posts.
            </summary>
        </member>
        <member name="P:handshake.PostData.PostPostData.Author">
            <summary>
            The author who made the post.
            </summary>
        </member>
        <member name="P:handshake.PostData.PostPostData.Content">
            <summary>
            The contetn of the post.
            </summary>
        </member>
        <member name="P:handshake.PostData.PostPostData.Longitude">
            <summary>
            The post location longitude;
            </summary>
        </member>
        <member name="P:handshake.PostData.PostPostData.Latitude">
            <summary>
            The post location latitude;
            </summary>
        </member>
        <member name="T:handshake.PostData.UserPostData">
            <summary>
            This class contains all information needed to insert an user.
            </summary>
        </member>
        <member name="P:handshake.PostData.UserPostData.Nickname">
            <summary>
            The nickname.
            </summary>
        </member>
        <member name="P:handshake.PostData.UserPostData.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="T:handshake.Services.AuthService">
            <summary>
            The <see cref="T:handshake.Interfaces.IAuthService"/> class is a service for authentication.
            </summary>
        </member>
        <member name="M:handshake.Services.AuthService.Authenticate(System.String,System.String)">
            <summary>
            Performs the Authentication with the SQL Server and retrives a connection.
            </summary>
            <param name="username">The SQL username.</param>
            <param name="password">The SQL password.</param>
            <returns>An open connection.</returns>
        </member>
        <member name="M:handshake.Services.AuthService.GetConnection">
            <summary>
            Retrives the current connection.
            </summary>
            <returns>the current connection.</returns>
        </member>
    </members>
</doc>
